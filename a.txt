declare void @putint(i32 )
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
declare i32 @getint()
declare i32 @getch()
declare void @putch(i32)
@a = dso_local global [ 8x i32] zeroinitializer 
@b = dso_local constant [ 8x i32][ i32 9, i32 2, i32 3, i32 4, i32 1, i32 5, i32 4, i32 0]
@c = dso_local global [ 8x i32][ i32 1, i32 2, i32 3, i32 4, i32 6, i32 3, i32 7, i32 8]
@e = dso_local global [ 8x i32][ i32 6, i32 7, i32 4, i32 5, i32 5, i32 6, i32 9, i32 10]

define dso_local i32 @main(){

    %1 = mul i32 2,  2
    %2 = add i32 1,  %1
    %3 = getelementptr [8 x i32],[8 x i32]* @e, i32 0, i32 0
    %4 = getelementptr i32, i32* %3, i32 %2
    %5 = load i32, i32* %4
    %6 = mul i32 2,  0
    %7 = add i32 1,  %6
    %8 = getelementptr [8 x i32],[8 x i32]* @e, i32 0, i32 0
    %9 = getelementptr i32, i32* %8, i32 %7
    %10 = load i32, i32* %9
    %11 = mul i32 2,  0
    %12 = add i32 0,  %11
    %13 = getelementptr [8 x i32],[8 x i32]* @e, i32 0, i32 0
    %14 = getelementptr i32, i32* %13, i32 %12
    %15 = load i32, i32* %14
    %16 = mul i32 2,  2
    %17 = add i32 0,  %16
    %18 = getelementptr [8 x i32],[8 x i32]* @a, i32 0, i32 0
    %19 = getelementptr i32, i32* %18, i32 %17
    %20 = load i32, i32* %19
    %21 = add i32 %5, %10
    %22 = sub i32 %21, %15
    %23 = add i32 %22, %20
    call void @putint(i32 %23)
    %24 = alloca [8x i32]
    %25 = getelementptr [8 x i32],[8 x i32]* %24, i32 0, i32 0
    call void @memset(i32* %25, i32 0, i32 32)
    %26 = alloca [8x i32]
    %27 = getelementptr [8 x i32],[8 x i32]* %26, i32 0, i32 0
    call void @memset(i32* %27, i32 0, i32 32)
    %28 = getelementptr i32, i32* %27, i32 0
    store i32 1, i32 *%28
    %29 = getelementptr i32, i32* %27, i32 1
    store i32 2, i32 *%29
    %30 = getelementptr i32, i32* %27, i32 2
    store i32 3, i32 *%30
    %31 = getelementptr i32, i32* %27, i32 3
    store i32 4, i32 *%31
    %32 = getelementptr i32, i32* %27, i32 4
    store i32 5, i32 *%32
    %33 = getelementptr i32, i32* %27, i32 5
    store i32 6, i32 *%33
    %34 = getelementptr i32, i32* %27, i32 6
    store i32 7, i32 *%34
    %35 = getelementptr i32, i32* %27, i32 7
    store i32 8, i32 *%35
    %36 = alloca [8x i32]
    %37 = getelementptr [8 x i32],[8 x i32]* %36, i32 0, i32 0
    call void @memset(i32* %37, i32 0, i32 32)
    %38 = getelementptr i32, i32* %37, i32 0
    store i32 1, i32 *%38
    %39 = getelementptr i32, i32* %37, i32 1
    store i32 2, i32 *%39
    %40 = getelementptr i32, i32* %37, i32 2
    store i32 3, i32 *%40
    %41 = getelementptr i32, i32* %37, i32 3
    store i32 4, i32 *%41
    %42 = getelementptr i32, i32* %37, i32 4
    store i32 5, i32 *%42
    %43 = getelementptr i32, i32* %37, i32 5
    store i32 6, i32 *%43
    %44 = getelementptr i32, i32* %37, i32 6
    store i32 7, i32 *%44
    %45 = getelementptr i32, i32* %37, i32 7
    store i32 8, i32 *%45
    call void @putch(i32 10)
    %46 = alloca [8x i32]
    %47 = getelementptr [8 x i32],[8 x i32]* %46, i32 0, i32 0
    call void @memset(i32* %47, i32 0, i32 32)
    %48 = getelementptr [8 x i32],[8 x i32]* %26, i32 0, i32 0
    %49 = getelementptr i32, i32* %48, i32 6
    %50 = load i32, i32* %49
    %51 = getelementptr [8 x i32],[8 x i32]* %26, i32 0, i32 0
    %52 = getelementptr i32, i32* %51, i32 7
    %53 = load i32, i32* %52
    %54 = getelementptr i32, i32* %47, i32 0
    store i32 %50, i32 *%54
    %55 = getelementptr i32, i32* %47, i32 1
    store i32 %53, i32 *%55
    %56 = getelementptr i32, i32* %47, i32 2
    store i32 3, i32 *%56
    %57 = getelementptr i32, i32* %47, i32 3
    store i32 4, i32 *%57
    %58 = getelementptr i32, i32* %47, i32 4
    store i32 5, i32 *%58
    %59 = getelementptr i32, i32* %47, i32 5
    store i32 6, i32 *%59
    %60 = getelementptr i32, i32* %47, i32 6
    store i32 7, i32 *%60
    %61 = getelementptr i32, i32* %47, i32 7
    store i32 8, i32 *%61
    %62 = mul i32 2,  3
    %63 = add i32 1,  %62
    %64 = getelementptr [8 x i32],[8 x i32]* %46, i32 0, i32 0
    %65 = getelementptr i32, i32* %64, i32 %63
    %66 = load i32, i32* %65
    %67 = mul i32 2,  0
    %68 = add i32 0,  %67
    %69 = getelementptr [8 x i32],[8 x i32]* %46, i32 0, i32 0
    %70 = getelementptr i32, i32* %69, i32 %68
    %71 = load i32, i32* %70
    %72 = mul i32 2,  0
    %73 = add i32 1,  %72
    %74 = getelementptr [8 x i32],[8 x i32]* %46, i32 0, i32 0
    %75 = getelementptr i32, i32* %74, i32 %73
    %76 = load i32, i32* %75
    %77 = mul i32 2,  2
    %78 = add i32 0,  %77
    %79 = getelementptr [8 x i32],[8 x i32]* %24, i32 0, i32 0
    %80 = getelementptr i32, i32* %79, i32 %78
    %81 = load i32, i32* %80
    %82 = add i32 %66, %71
    %83 = add i32 %82, %76
    %84 = add i32 %83, %81
    call void @putint(i32 %84)
    ret i32 0

}
