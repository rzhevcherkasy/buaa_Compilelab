declare void @putint(i32 )
declare void @memset(i32*, i32, i32)
declare i32 @getarray(i32*)
declare void @putarray(i32, i32*)
declare i32 @getint()
declare i32 @getch()
declare void @putch(i32)
@golbal = dso_local global [ 100x i32][ i32 1, i32 2,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0,i32 0]
@x = dso_local global i32 0
@y = dso_local global i32 0
@z = dso_local global i32 0

define dso_local void @f(i32 *%0,i32 %1){

    %3 = alloca i32* 
    store i32*  %0, i32* * %3
    %4 = alloca i32 
    store i32  %1, i32*  %4
    %5 = alloca [27x i32]
    %6 = getelementptr [27 x i32],[27 x i32]* %5, i32 0, i32 0
    call void @memset(i32* %6, i32 0, i32 108)
    %7 = getelementptr i32, i32* %6, i32 0
    store i32 1, i32 *%7
    %8 = getelementptr i32, i32* %6, i32 1
    store i32 2, i32 *%8
    %9 = getelementptr i32, i32* %6, i32 2
    store i32 3, i32 *%9
    %10 = getelementptr i32, i32* %6, i32 3
    store i32 4, i32 *%10
    %11 = getelementptr i32, i32* %6, i32 4
    store i32 5, i32 *%11
    %12 = getelementptr i32, i32* %6, i32 5
    store i32 6, i32 *%12
    %13 = getelementptr i32, i32* %6, i32 6
    store i32 7, i32 *%13
    %14 = getelementptr i32, i32* %6, i32 7
    store i32 8, i32 *%14
    %15 = getelementptr i32, i32* %6, i32 8
    store i32 9, i32 *%15
    %16 = getelementptr i32, i32* %6, i32 9
    store i32 1, i32 *%16
    %17 = getelementptr i32, i32* %6, i32 10
    store i32 2, i32 *%17
    %18 = getelementptr i32, i32* %6, i32 11
    store i32 3, i32 *%18
    %19 = getelementptr i32, i32* %6, i32 12
    store i32 4, i32 *%19
    %20 = getelementptr i32, i32* %6, i32 13
    store i32 5, i32 *%20
    %21 = getelementptr i32, i32* %6, i32 14
    store i32 6, i32 *%21
    %22 = getelementptr i32, i32* %6, i32 15
    store i32 7, i32 *%22
    %23 = getelementptr i32, i32* %6, i32 16
    store i32 8, i32 *%23
    %24 = getelementptr i32, i32* %6, i32 17
    store i32 9, i32 *%24
    %25 = getelementptr i32, i32* %6, i32 18
    store i32 1, i32 *%25
    %26 = getelementptr i32, i32* %6, i32 19
    store i32 2, i32 *%26
    %27 = getelementptr i32, i32* %6, i32 20
    store i32 3, i32 *%27
    %28 = getelementptr i32, i32* %6, i32 21
    store i32 4, i32 *%28
    %29 = getelementptr i32, i32* %6, i32 22
    store i32 5, i32 *%29
    %30 = getelementptr i32, i32* %6, i32 23
    store i32 6, i32 *%30
    %31 = getelementptr i32, i32* %6, i32 24
    store i32 7, i32 *%31
    %32 = getelementptr i32, i32* %6, i32 25
    store i32 8, i32 *%32
    %33 = getelementptr i32, i32* %6, i32 26
    store i32 9, i32 *%33
    %34 = alloca [27x i32]
    %35 = getelementptr [27 x i32],[27 x i32]* %34, i32 0, i32 0
    call void @memset(i32* %35, i32 0, i32 108)
    %36 = getelementptr i32, i32* %35, i32 0
    store i32 1, i32 *%36
    %37 = getelementptr i32, i32* %35, i32 1
    store i32 2, i32 *%37
    %38 = getelementptr i32, i32* %35, i32 2
    store i32 3, i32 *%38
    %39 = getelementptr i32, i32* %35, i32 3
    store i32 4, i32 *%39
    %40 = getelementptr i32, i32* %35, i32 4
    store i32 5, i32 *%40
    %41 = getelementptr i32, i32* %35, i32 5
    store i32 6, i32 *%41
    %42 = getelementptr i32, i32* %35, i32 6
    store i32 7, i32 *%42
    %43 = getelementptr i32, i32* %35, i32 7
    store i32 8, i32 *%43
    %44 = getelementptr i32, i32* %35, i32 8
    store i32 9, i32 *%44
    %45 = getelementptr i32, i32* %35, i32 9
    store i32 1, i32 *%45
    %46 = getelementptr i32, i32* %35, i32 10
    store i32 2, i32 *%46
    %47 = getelementptr i32, i32* %35, i32 11
    store i32 3, i32 *%47
    %48 = getelementptr i32, i32* %35, i32 12
    store i32 4, i32 *%48
    %49 = getelementptr i32, i32* %35, i32 13
    store i32 5, i32 *%49
    %50 = getelementptr i32, i32* %35, i32 14
    store i32 6, i32 *%50
    %51 = getelementptr i32, i32* %35, i32 15
    store i32 7, i32 *%51
    %52 = getelementptr i32, i32* %35, i32 16
    store i32 8, i32 *%52
    %53 = getelementptr i32, i32* %35, i32 17
    store i32 9, i32 *%53
    %54 = getelementptr i32, i32* %35, i32 18
    store i32 1, i32 *%54
    %55 = getelementptr i32, i32* %35, i32 19
    store i32 2, i32 *%55
    %56 = getelementptr i32, i32* %35, i32 20
    store i32 3, i32 *%56
    %57 = getelementptr i32, i32* %35, i32 21
    store i32 4, i32 *%57
    %58 = getelementptr i32, i32* %35, i32 22
    store i32 5, i32 *%58
    %59 = getelementptr i32, i32* %35, i32 23
    store i32 6, i32 *%59
    %60 = getelementptr i32, i32* %35, i32 24
    store i32 7, i32 *%60
    %61 = getelementptr i32, i32* %35, i32 25
    store i32 8, i32 *%61
    %62 = getelementptr i32, i32* %35, i32 26
    store i32 9, i32 *%62
    %63 = alloca [27x i32]
    %64 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    call void @memset(i32* %64, i32 0, i32 108)
    %65 = alloca i32
    %66 = alloca i32
    %67 = alloca i32
    %68 = alloca i32
    store i32 0, i32* %68
    %69 = alloca i32
    store i32 0, i32* %69
    %70 = alloca i32
    store i32 0, i32* %70
    br label %71

71:
    %72 = load i32, i32* %68
    %73 = icmp slt i32 %72, 3
    br i1 %73, label %74, label %121

74:
    store i32 0, i32* %69
    br label %75

75:
    %76 = load i32, i32* %69
    %77 = icmp slt i32 %76, 3
    br i1 %77, label %78, label %118

78:
    store i32 0, i32* %70
    br label %79

79:
    %80 = load i32, i32* %70
    %81 = icmp slt i32 %80, 3
    br i1 %81, label %82, label %115

82:
    %83 = load i32, i32* %68
    %84 = load i32, i32* %69
    %85 = load i32, i32* %70
    %86 = load i32, i32* %68
    %87 = load i32, i32* %69
    %88 = load i32, i32* %70
    %89 = mul i32 3,  %86
    %90 = add i32 %87,  %89
    %91 = mul i32 3,  %90
    %92 = add i32 %88,  %91
    %93 = getelementptr [27 x i32],[27 x i32]* %5, i32 0, i32 0
    %94 = getelementptr i32, i32* %93, i32 %92
    %95 = load i32, i32* %94
    %96 = load i32, i32* %68
    %97 = load i32, i32* %69
    %98 = load i32, i32* %70
    %99 = mul i32 3,  %96
    %100 = add i32 %97,  %99
    %101 = mul i32 3,  %100
    %102 = add i32 %98,  %101
    %103 = getelementptr [27 x i32],[27 x i32]* %34, i32 0, i32 0
    %104 = getelementptr i32, i32* %103, i32 %102
    %105 = load i32, i32* %104
    %106 = add i32 %95, %105
    %107 = mul i32 3,  %83
    %108 = add i32 %84,  %107
    %109 = mul i32 3,  %108
    %110 = add i32 %85,  %109
    %111 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    %112 = getelementptr i32, i32* %111, i32 %110
    store i32 %106, i32* %112
    %113 = load i32, i32* %70
    %114 = add i32 %113, 1
    store i32 %114, i32* %70
    br label %79

115:
    %116 = load i32, i32* %69
    %117 = add i32 %116, 1
    store i32 %117, i32* %69
    br label %75

118:
    %119 = load i32, i32* %68
    %120 = add i32 %119, 1
    store i32 %120, i32* %68
    br label %71

121:
    %122 = mul i32 3,  0
    %123 = add i32 0,  %122
    %124 = mul i32 3,  %123
    %125 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    %126 = getelementptr i32, i32* %125, i32 %124
    call void @putarray(i32 3,i32* %126)
    %127 = mul i32 3,  0
    %128 = add i32 1,  %127
    %129 = mul i32 3,  %128
    %130 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    %131 = getelementptr i32, i32* %130, i32 %129
    call void @putarray(i32 3,i32* %131)
    %132 = mul i32 3,  0
    %133 = add i32 2,  %132
    %134 = mul i32 3,  %133
    %135 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    %136 = getelementptr i32, i32* %135, i32 %134
    call void @putarray(i32 3,i32* %136)
    %137 = mul i32 3,  1
    %138 = add i32 0,  %137
    %139 = mul i32 3,  %138
    %140 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    %141 = getelementptr i32, i32* %140, i32 %139
    call void @putarray(i32 3,i32* %141)
    %142 = mul i32 3,  1
    %143 = add i32 1,  %142
    %144 = mul i32 3,  %143
    %145 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    %146 = getelementptr i32, i32* %145, i32 %144
    call void @putarray(i32 3,i32* %146)
    %147 = mul i32 3,  1
    %148 = add i32 2,  %147
    %149 = mul i32 3,  %148
    %150 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    %151 = getelementptr i32, i32* %150, i32 %149
    call void @putarray(i32 3,i32* %151)
    %152 = mul i32 3,  2
    %153 = add i32 0,  %152
    %154 = mul i32 3,  %153
    %155 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    %156 = getelementptr i32, i32* %155, i32 %154
    call void @putarray(i32 3,i32* %156)
    %157 = mul i32 3,  2
    %158 = add i32 1,  %157
    %159 = mul i32 3,  %158
    %160 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    %161 = getelementptr i32, i32* %160, i32 %159
    call void @putarray(i32 3,i32* %161)
    %162 = mul i32 3,  2
    %163 = add i32 2,  %162
    %164 = mul i32 3,  %163
    %165 = getelementptr [27 x i32],[27 x i32]* %63, i32 0, i32 0
    %166 = getelementptr i32, i32* %165, i32 %164
    call void @putarray(i32 3,i32* %166)
    ret void

}
define dso_local i32 @main(){

    %1 = getelementptr [100 x i32],[100 x i32]* @golbal, i32 0, i32 0
     call void@f(i32* %1,i32 16)
    ret i32 0

}
